#pragma checksum "C:\Users\Sterben\Desktop\GiftForMyLove\GiftForMyLove\Views\KhachHang\KhachHang.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "3640c18d79f911a11e02423c65b2675f5d423c6f"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_KhachHang_KhachHang), @"mvc.1.0.view", @"/Views/KhachHang/KhachHang.cshtml")]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#nullable restore
#line 1 "C:\Users\Sterben\Desktop\GiftForMyLove\GiftForMyLove\Views\_ViewImports.cshtml"
using GiftForMyLove;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "C:\Users\Sterben\Desktop\GiftForMyLove\GiftForMyLove\Views\_ViewImports.cshtml"
using GiftForMyLove.Models;

#line default
#line hidden
#nullable disable
#nullable restore
#line 4 "C:\Users\Sterben\Desktop\GiftForMyLove\GiftForMyLove\Views\_ViewImports.cshtml"
using DevExtreme.AspNet.Mvc;

#line default
#line hidden
#nullable disable
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"3640c18d79f911a11e02423c65b2675f5d423c6f", @"/Views/KhachHang/KhachHang.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"49c09ae22d04b010be1841ce322a2b0936e5f8fb", @"/Views/_ViewImports.cshtml")]
    public class Views_KhachHang_KhachHang : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<KhachHang>
    {
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
            WriteLiteral("\r\n");
#nullable restore
#line 2 "C:\Users\Sterben\Desktop\GiftForMyLove\GiftForMyLove\Views\KhachHang\KhachHang.cshtml"
  
    ViewData["Title"] = "Khách hàng";
    Layout = "~/Views/Shared/_Layout.cshtml";

#line default
#line hidden
#nullable disable
            WriteLiteral("\r\n\r\n");
            WriteLiteral("<div class=\"right_col\" role=\"main\">\r\n    <div class=\"row\">\r\n        <div class=\"col-md-12 col-sm-12 \">\r\n            ");
#nullable restore
#line 12 "C:\Users\Sterben\Desktop\GiftForMyLove\GiftForMyLove\Views\KhachHang\KhachHang.cshtml"
        Write(Html.DevExtreme().DataGrid<KhachHang>().ID("KhachHang_dataGrid")
                                    .DataSource(ds => ds.Mvc()
                                        .Controller("KhachHang")
                                        .LoadAction("LoadKhachHang")
                                        .InsertAction("InsertKhachHang")
                                        .UpdateAction("UpdateKhachHang")
                                        .DeleteAction("DeleteKhachHang")
                                        .Key("Idkhach")
                                    )
                                    .RemoteOperations(true)
                                    .Columns(columns => {

                                        columns.AddFor(m => m.Idkhach).AllowEditing(false).Visible(false);

                                        columns.AddFor(m => m.TenQg).Caption("Tên quốc gia").Lookup(lookup => lookup.DataSource(d => d.Mvc()
                                                                                            .Controller("lookup").LoadAction("GetDataQuocGia").Key("Name")).DisplayExpr("Name").ValueExpr("Name"));

                                        columns.AddFor(m => m.MaKhuvuc).Caption("Mã khu vực").Lookup(lookup => lookup.DataSource(d => d.Mvc()
                                                                                            .Controller("lookup").LoadAction("GetDataKhuVuc").Key("MaKhuvuc")).DisplayExpr("TenKhuvuc").ValueExpr("MaKhuvuc"));

                                        columns.AddFor(m => m.MaKhach).Caption("Mã khách");

                                        columns.AddFor(m => m.TenKhach).Caption("Tên tắt");

                                        columns.AddFor(m => m.TenFull).Caption("Tên khách");

                                        columns.AddFor(m => m.DiaChi).Caption("Địa chỉ");

                                        columns.AddFor(m => m.MaSoThue).Caption("Mã số thuế");

                                        columns.AddFor(m => m.DienThoai).Caption("Điện thoại");

                                        columns.AddFor(m => m.Fax).Caption("FAX");

                                        columns.AddFor(m => m.Email).Caption("Email");

                                        columns.AddFor(m => m.LoaiKhach).Caption("Loại khách").Lookup(lookup => lookup.DataSource(new JS("LoaiKhach")).ValueExpr("id").DisplayExpr("name"));

                                        columns.AddFor(m => m.TaiKhoan).Caption("Tài khoản");

                                        columns.AddFor(m => m.NganHang).Caption("Ngân hàng");

                                        columns.AddFor(m => m.GiayPhep).Caption("Giấy phép");

                                        columns.AddFor(m => m.NgayCap).Caption("Ngày cấp");

                                        columns.AddFor(m => m.GhiChu).Caption("Ghi chú");

                                        columns.AddFor(m => m.ToaKinhTe).Caption("Tòa kinh tế");

                                        columns.AddFor(m => m.Vanchuyen).Caption("Vận chuyển");

                                        columns.AddFor(m => m.Bocxep).Caption("Bốc xếp");

                                        columns.AddFor(m => m.Dientich).Caption("Diện tích");

                                        columns.AddFor(m => m.Sanluong).Caption("Sản lượng");

                                        columns.AddFor(m => m.GiaoDich).Caption("Giao dịch").Lookup(lookup => lookup.DataSource(new JS("GiaoDich")).ValueExpr("id").DisplayExpr("name"));

                                        columns.AddFor(m => m.GiaoDichMua).Caption("Giao dịch mua");

                                        columns.AddFor(m => m.GiaoDichBan).Caption("Giao dịch bán");

                                        columns.AddFor(m => m.ThanhToanMua).Caption("Thanh toán mua").Lookup(lookup => lookup.DataSource(new JS("ThanhToanMua")).ValueExpr("id").DisplayExpr("name"));

                                        columns.AddFor(m => m.ThanhToanBan).Caption("Thanh toán bán").Lookup(lookup => lookup.DataSource(new JS("ThanhToanBan")).ValueExpr("id").DisplayExpr("name"));

                                        columns.AddFor(m => m.CheckItem).Caption("Kiểm tra SL hàng hóa giao dịch");

                                        columns.AddFor(m => m.CheckTh).Caption("Kiểm tra SL trễ hạn giao hàng cho phép");

                                    })
                                    .Editing(e => e.Mode(GridEditMode.Popup)
                                        .AllowAdding(true)
                                        .AllowUpdating(true)
                                        .AllowDeleting(true)
                                        .UseIcons(true)
                                        .Popup(p => p
                                            .Title("Chỉnh sửa khách hàng")
                                            .ShowTitle(true)
                                            .Width(1400)
                                            .Height(800)
                                        )
                                        
                                        .Form(f => f.Items(items => {
                                            items.AddGroup()
                                                    .ColCount(4)
                                                    .ColSpan(2)
                                                    
                                                    .Items(groupItems =>
                                                    {
                                                        groupItems.AddSimpleFor(a => a.MaKhach);
                                                        groupItems.AddSimpleFor(a => a.TenKhach).ColSpan(2);
                                                        groupItems.AddSimpleFor(a => a.MaSoThue);
                                                        groupItems.AddSimpleFor(a => a.TenFull).ColSpan(3);
                                                        groupItems.AddSimpleFor(a => a.DienThoai);
                                                        groupItems.AddSimpleFor(a => a.DiaChi).ColSpan(3);
                                                        groupItems.AddSimpleFor(a => a.Fax);
                                                        groupItems.AddSimpleFor(a => a.LoaiKhach).ColSpan(3);
                                                        groupItems.AddSimpleFor(a => a.Email);
                                                        groupItems.AddSimpleFor(a => a.TaiKhoan);
                                                        groupItems.AddSimpleFor(a => a.NganHang).ColSpan(3);
                                                        groupItems.AddSimpleFor(a => a.GiayPhep);
                                                        groupItems.AddSimpleFor(a => a.NgayCap).ColSpan(2);
                                                        groupItems.AddSimpleFor(a => a.MaKhuvuc);
                                                        groupItems.AddSimpleFor(a => a.TenQg).ColSpan(3);
                                                        groupItems.AddSimpleFor(a => a.ToaKinhTe);
                                                        groupItems.AddSimpleFor(a => a.Vanchuyen).ColSpan(3);
                                                        groupItems.AddSimpleFor(a => a.Bocxep);
                                                        groupItems.AddSimpleFor(a => a.Dientich).ColSpan(3);
                                                        groupItems.AddSimpleFor(a => a.Sanluong);
                                                        groupItems.AddSimpleFor(a => a.GhiChu).ColSpan(4).Editor(editor => editor.TextArea().Height(50));
                                                        groupItems.AddSimpleFor(a => a.CheckItem);
                                                        groupItems.AddSimpleFor(a => a.CheckTh);
                                                        groupItems.AddSimpleFor(a => a.GiaoDich).ColSpan(2);
                                                        groupItems.AddSimpleFor(a => a.GiaoDichMua).ColSpan(2);
                                                        groupItems.AddSimpleFor(a => a.ThanhToanMua).ColSpan(2);
                                                        groupItems.AddSimpleFor(a => a.GiaoDichBan).ColSpan(2);
                                                        groupItems.AddSimpleFor(a => a.ThanhToanBan).ColSpan(2);
                                                    });
                                        }))
                                    )
                                    .Selection(s => s.Mode(SelectionMode.Single))
                                    .OnSelectionChanged("KhachHang_selection")
                                    .Export(e => e.Enabled(true))
                                    .FilterRow(filter => filter.Visible(true).ApplyFilter(GridApplyFilterMode.Auto))
                                    .HeaderFilter(hearder => hearder.Visible(true))
                                    .AllowColumnResizing(true)
                                    .AllowColumnReordering(true)
                                    .ColumnAutoWidth(true)
                                    .ColumnChooser(c => c.Enabled(true))
                                    .ColumnFixing(c => c.Enabled(true))
                                    .ShowBorders(true)
                                    .Grouping(group => group.AutoExpandAll(true))
                                    .SearchPanel(searchPanel => searchPanel.Visible(true))
                                    .GroupPanel(groupPanel => groupPanel.Visible(true))
                                    .Paging(paging => paging.PageSize(10))
                                    .Pager(paper =>
                                    {
                                        paper.ShowPageSizeSelector(true);
                                        paper.AllowedPageSizes(new[] { 5, 10, 20 });
                                        paper.ShowInfo(true);
                                    })
                                );

#line default
#line hidden
#nullable disable
            WriteLiteral(@"
            <div class=""x_panel"">
                <div class=""x_content"">
                    <ul class=""nav nav-tabs bar_tabs"" id=""myTab"" role=""tablist"">
                        <li class=""nav-item"">
                            <a class=""nav-link active"" id=""home-tab"" data-toggle=""tab"" href=""#home"" role=""tab"" aria-controls=""home"" aria-selected=""true"">Định mức</a>
                        </li>
                        <li class=""nav-item"">
                            <a class=""nav-link"" id=""profile-tab"" data-toggle=""tab"" href=""#profile"" role=""tab"" aria-controls=""profile"" aria-selected=""false"">Người đại diện</a>
                        </li>
                    </ul>
                    <div class=""tab-content"" id=""myTabContent"">
                        <div class=""tab-pane fade show active"" id=""home"" role=""tabpanel"" aria-labelledby=""home-tab"">
                            ");
#nullable restore
#line 169 "C:\Users\Sterben\Desktop\GiftForMyLove\GiftForMyLove\Views\KhachHang\KhachHang.cshtml"
                        Write(Html.DevExtreme().DataGrid<CustomerNorm>().ID("CustomerNorm_dataGrid")
                                    .DataSource(ds => ds.Mvc()
                                        .Controller("KhachHang")
                                        .LoadParams(new { MaKhach = new JS("MaKhach") })
                                        .LoadAction("LoadCustomerNorm")
                                        .InsertAction("InsertCustomerNorm")
                                        .UpdateAction("UpdateCustomerNorm")
                                        .DeleteAction("DeleteCustomerNorm")
                                        .Key("Makhach", "Nhomhang", "Macn")
                                    )
                                    .RemoteOperations(true)
                                    .Columns(columns => {

                                        columns.AddFor(m => m.Makhach).AllowEditing(false).Visible(false);

                                        columns.AddFor(m => m.Nhomhang).Caption("Nhóm hàng").Lookup(lookup => lookup.DataSource(d => d.Mvc()
                                                                                            .Controller("lookup").LoadAction("GetDataNhomHangHoa").Key("TenNhom")).DisplayExpr("TenNhom").ValueExpr("TenNhom"));

                                        columns.AddFor(m => m.Macn).Caption("Đơn vị").Lookup(lookup => lookup.DataSource(d => d.Mvc()
                                                                                            .Controller("lookup").LoadAction("GetDataDonVi").Key("Id")).DisplayExpr("NameE").ValueExpr("Id"));

                                        columns.AddFor(m => m.ValueNorm).Caption("ĐM HH chưa giao(KGS)");

                                        columns.AddFor(m => m.NguoiGd).Caption("Người giao dịch");

                                        columns.AddFor(m => m.ChucvuNguoigd).Caption("Chức vụ người GD");

                                        columns.AddFor(m => m.Ghichu).Caption("Ghi chú");

                                        columns.AddFor(m => m.UserCreate).Caption("Người tạo");

                                        columns.AddFor(m => m.DateCreate).Caption("Ngày tạo");

                                    })
                                    .Editing(e => e.Mode(GridEditMode.Popup)
                                        .AllowAdding(true)
                                        .AllowUpdating(true)
                                        .AllowDeleting(true)
                                        .UseIcons(true)
                                        .Popup(p => p
                                            .Title("Chỉnh sửa định mức khách hàng")
                                            .ShowTitle(true)
                                            .Width(700)
                                            .Height(450)
                                        )
                                        .Form(f => f.Items(items => {
                                            items.AddGroup()
                                                .ColCount(2)
                                                .ColSpan(2)
                                                .Items(groupItems => {
                                                    groupItems.AddSimpleFor(a => a.Macn).ColSpan(2);

                                                    groupItems.AddSimpleFor(a => a.NguoiGd).ColSpan(2);

                                                    groupItems.AddSimpleFor(a => a.ChucvuNguoigd).ColSpan(2);

                                                    groupItems.AddSimpleFor(a => a.Nhomhang).ColSpan(2);

                                                    groupItems.AddSimpleFor(a => a.ValueNorm).ColSpan(2);

                                                    groupItems.AddSimpleFor(a => a.Ghichu).ColSpan(2);

                                                });
                                        }))
                                    )
                                    .Export(e => e.Enabled(true))
                                    .FilterRow(filter => filter.Visible(true).ApplyFilter(GridApplyFilterMode.Auto))
                                    .HeaderFilter(hearder => hearder.Visible(true))
                                    .AllowColumnResizing(true)
                                    .AllowColumnReordering(true)
                                    .ColumnAutoWidth(true)
                                    .ColumnChooser(c => c.Enabled(true))
                                    .ColumnFixing(c => c.Enabled(true))
                                    .ShowBorders(true)
                                    .Grouping(group => group.AutoExpandAll(true))
                                    .SearchPanel(searchPanel => searchPanel.Visible(true))
                                    .GroupPanel(groupPanel => groupPanel.Visible(true))
                                    .Paging(paging => paging.PageSize(10))
                                    .Pager(paper =>
                                    {
                                        paper.ShowPageSizeSelector(true);
                                        paper.AllowedPageSizes(new[] { 5, 10, 20 });
                                        paper.ShowInfo(true);
                                    })
                                );

#line default
#line hidden
#nullable disable
            WriteLiteral("\r\n                        </div>\r\n                        <div class=\"tab-pane fade\" id=\"profile\" role=\"tabpanel\" aria-labelledby=\"profile-tab\">\r\n                            ");
#nullable restore
#line 256 "C:\Users\Sterben\Desktop\GiftForMyLove\GiftForMyLove\Views\KhachHang\KhachHang.cshtml"
                        Write(Html.DevExtreme().DataGrid<Signer>().ID("Signer_dataGrid")
                                    .DataSource(ds => ds.Mvc()
                                        .Controller("KhachHang")
                                        .LoadParams(new { MaKhach = new JS("MaKhach") })
                                        .LoadAction("LoadSigner")
                                        .InsertAction("InsertSigner")
                                        .UpdateAction("UpdateSigner")
                                        .DeleteAction("DeleteSigner")
                                        .Key("Id")
                                    )
                                    .RemoteOperations(true)
                                    .Columns(columns => {

                                        columns.AddFor(m => m.Id).AllowEditing(false).Visible(false);

                                        columns.AddFor(m => m.Nguoiky).Caption("Người đại diện");

                                        columns.AddFor(m => m.Chucvu).Caption("Chức vụ");

                                        columns.AddFor(m => m.Uyquyen).Caption("Ủy quyền");

                                    })
                                    .Editing(e => e.Mode(GridEditMode.Popup)
                                        .AllowAdding(true)
                                        .AllowUpdating(true)
                                        .AllowDeleting(true)
                                        .UseIcons(true)
                                        .Popup(p => p
                                            .Title("Chỉnh sửa người đại diện")
                                            .ShowTitle(true)
                                            .Width(700)
                                            .Height(300)
                                        )
                                        .Form(f => f.Items(items => {
                                            items.AddGroup()
                                                .ColCount(2)
                                                .ColSpan(2)
                                                .Items(groupItems => {
                                                    groupItems.AddSimpleFor(a => a.Nguoiky);

                                                    groupItems.AddSimpleFor(a => a.Chucvu);

                                                    groupItems.AddSimpleFor(a => a.Uyquyen).ColSpan(2);

                                                });
                                        }))
                                    )
                                    .Export(e => e.Enabled(true))
                                    .FilterRow(filter => filter.Visible(true).ApplyFilter(GridApplyFilterMode.Auto))
                                    .HeaderFilter(hearder => hearder.Visible(true))
                                    .AllowColumnResizing(true)
                                    .AllowColumnReordering(true)
                                    .ColumnAutoWidth(true)
                                    .ColumnChooser(c => c.Enabled(true))
                                    .ColumnFixing(c => c.Enabled(true))
                                    .ShowBorders(true)
                                    .Grouping(group => group.AutoExpandAll(true))
                                    .SearchPanel(searchPanel => searchPanel.Visible(true))
                                    .GroupPanel(groupPanel => groupPanel.Visible(true))
                                    .Paging(paging => paging.PageSize(10))
                                    .Pager(paper =>
                                    {
                                        paper.ShowPageSizeSelector(true);
                                        paper.AllowedPageSizes(new[] { 5, 10, 20 });
                                        paper.ShowInfo(true);
                                    })
                                );

#line default
#line hidden
#nullable disable
            WriteLiteral(@"
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <br />
</div>
<input type=""text"" id=""MaKhach"" hidden>
<script type=""text/javascript"">
    function KhachHang_selection(selectedItems) {
        var data = selectedItems.selectedRowsData[0];
        if (data) {
            document.getElementById(""MaKhach"").value = data.MaKhach; 
            $(""#CustomerNorm_dataGrid"").dxDataGrid(""instance"").refresh();
            $(""#Signer_dataGrid"").dxDataGrid(""instance"").refresh();
        }
    }
    function MaKhach() {
        return document.getElementById(""MaKhach"").value;
    }
    var LoaiKhach = [{
    ""id"": 0, ""name"": ""Mua bán lâu dài""
    }, {
    ""id"": 1, ""name"": ""Mua bán theo từng PA""
    }, {
    ""id"": 2, ""name"": ""Mua bán ủy thác""
    }
    ];

    var GiaoDich = [{
        ""id"": 0, ""name"": ""Chờ duyệt""
    }, {
        ""id"": 1, ""name"": ""Đang giao dịch""
    }, {
        ""id"": 2, ""name"": ""Ngừng gia");
            WriteLiteral(@"o dịch""
    }
    ];

    var ThanhToanMua = [{
        ""id"": true, ""name"": ""Ứng tiền""
    }, {
        ""id"": false, ""name"": ""Không ứng tiền""
    }
    ];

    var ThanhToanBan = [{
        ""id"": true, ""name"": ""Ứng tiền""
    }, {
        ""id"": false, ""name"": ""Không ứng tiền""
    }
    ];
</script>




");
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<KhachHang> Html { get; private set; }
    }
}
#pragma warning restore 1591
